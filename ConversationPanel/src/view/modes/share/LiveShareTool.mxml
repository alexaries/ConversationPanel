<?xml version="1.0" encoding="utf-8"?>
<common:ContentView xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:common="view.common.*" 
					width="330" height="320" xmlns:buttons="view.common.buttons.*" xmlns:plugins="view.modes.tools.plugins.*" xmlns:share="view.modes.share.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.doer.config.AppConf;
			import com.doer.config.ComplexConf;
			import com.doer.modes.live.tools.LiveVideoInfo;
			import com.doer.modes.tools.ToolController;
			import com.doer.resource.ResManager;
			import com.metaedu.client.messages.nebula.NebulaParticipantType;
			import com.metaedu.client.messages.nebula.NebulaPlatformType;
			import com.metaedu.client.messages.nebula.complex.OnlineUnit;
			
			public var handler:Function = null;
			
			/**
			 * 当前正在显示的视频的信息
			 * **/
			public var liveVideoInfo:Vector.<LiveVideoInfo> = null;
			
			/**
			 * 保持比例宽填满
			 * **/
			public static const fill_width:String = "fill_width";
			
			/**
			 * 保持比例高填满
			 * **/
			public static const fill_height:String = "fill_height";
			
			/**
			 * 无脑填充
			 * **/
			public static const fill_screen:String = "fill_screen";
			
			/**
			 * 渲染模式
			 * **/
			[Bindable]
			public var rendMode:String = fill_width;
			
			override public function invalidate():void
			{
				for(var i:int = 0; i < 4; i ++)
				{
					if(i < liveVideoInfo.length)
					{
						var info:OnlineUnit = ComplexConf.getMemberById(liveVideoInfo[i].id);
						
						var labelText:String = "";
						
						if(liveVideoInfo[i].id == ComplexConf.chargInfo.id)
							labelText = ComplexConf.chargInfo.surname + ComplexConf.chargInfo.name + "的视频";
						else if(info != null)
							labelText = info.surname + info.name + "的视频";
						
						if(liveVideoInfo[i].isDoubleCamera)
						{
							labelText += "(1)";
							
							if(AppConf.platform != NebulaPlatformType.BOARD)
								this['group' + (i + 1)].enabled = false;
						}
							
						
						this['label' + (i + 1)].text = labelText;
						this['group' + (i + 1)].visible = true;
					}else
					{
						this['group' + (i + 1)].visible = false;
					}
				}
				
			}
			
			protected function onCheckBoxHandler(event:Event):void
			{
				for(var i:int = 1; i <= 4; i ++)
				{
					this['checkBox' + i].selected = false;
				}
				
				(event.target as CheckBox).selected = true;
				
				for(i = 0; i < 4; i ++)
				{
					if(this['checkBox' + (i + 1)].selected)
					{
						(this.parent as LiveVideoShareView).onChoseVideo(liveVideoInfo[i]);
						break;
					}
					
				}
				
			}
			
			public function setSelectedById(id:String,isDoubleCamera:Boolean):void
			{
				if(liveVideoInfo == null) return;
				
				for(var i:int = 1; i <= 4; i ++)
				{
					this['checkBox' + i].selected = false;
				}
				
				for(i = 0; i < 4; i ++)
				{
					if(i < liveVideoInfo.length)
					{
						if(liveVideoInfo[i].id == id && liveVideoInfo[i].isDoubleCamera == isDoubleCamera)
							this['checkBox' + (i + 1)].selected = true;
					}
				}
			}
			
			protected function onVideoModeHandler(event:MouseEvent):void
			{
				if(event.target == btnMode1)
					rendMode = fill_width;
				else if(event.target == btnMode2)
					rendMode = fill_height;
				else
					rendMode = fill_screen;
				
				if(handler != null)
					handler();
			}
			
		]]>
	</fx:Script>
	
	
	<s:BorderContainer  buttonMode="true" left="0" right="0"  mouseDown="onStartDrag(event)"
						height="40" backgroundColor="#b6b6b6" borderVisible="false" cornerRadius="4">
		
		<s:Label left="10" color="#FFFFFF" fontSize="16" text="视频源选择" verticalCenter="0"/>
		
		<mx:LinkButton right="10" verticalCenter="0" width="15" height="15" click="{this.visible = false}"
					   downSkin="@Embed('assets/share/icon_close.png')" 
					   overSkin="@Embed('assets/share/icon_close.png')"
					   upSkin="@Embed('assets/share/icon_close.png')"/>
		
	</s:BorderContainer>
	
	<s:BorderContainer  left="0" right="0" top="35" bottom="0" cornerRadius="4" borderColor="#b6b6b6">
		
	</s:BorderContainer>
	
	<s:Group left="0" right="0" top="50" height="135">
		
		<s:layout>
			<s:VerticalLayout gap="20" />
		</s:layout>
		
		
		<s:Group width="100%" id="group1" visible="false"  enabled="{ComplexConf.participantType == NebulaParticipantType.CHARGE}" >
			
			<s:Label id="label1" left="10" width="250" maxDisplayedLines="1" fontSize="14" text="张三三的视频" verticalCenter="0"/>
			
			<s:CheckBox id="checkBox1" right="10" verticalCenter="0" change="onCheckBoxHandler(event)"  />
			
		</s:Group>
		
		<s:Group width="100%" id="group2" visible="false"  enabled="{ComplexConf.participantType == NebulaParticipantType.CHARGE}" >
			
			<s:Label id="label2" left="10" width="250" maxDisplayedLines="1" fontSize="14" text="张三三的视频" verticalCenter="0"/>
			
			<s:CheckBox id="checkBox2" right="10" verticalCenter="0" change="onCheckBoxHandler(event)" />
			
		</s:Group>
		
		<s:Group width="100%" id="group3" visible="false" enabled="{ComplexConf.participantType == NebulaParticipantType.CHARGE}"  >
			
			<s:Label id="label3" left="10" width="250" maxDisplayedLines="1" fontSize="14" text="张三三的视频" verticalCenter="0"/>
			
			<s:CheckBox id="checkBox3" right="10" verticalCenter="0" change="onCheckBoxHandler(event)" />
			
		</s:Group>
		
		<s:Group width="100%" id="group4" visible="false" enabled="{ComplexConf.participantType == NebulaParticipantType.CHARGE}"  >
			
			<s:Label id="label4" left="10" width="250" maxDisplayedLines="1" fontSize="14" text="张三三的视频" verticalCenter="0"/>
			
			<s:CheckBox id="checkBox4" right="10" verticalCenter="0" change="onCheckBoxHandler(event)" />
			
		</s:Group>
		
		
		
	</s:Group>
	
	<s:Group left="0" right="0" bottom="0" height="120">
		
		<s:Group left="0" right="0" height="30">
			
			<s:Rect left="0" right="0" top="0" bottom="0">
				<s:fill>
					<s:SolidColor color="#b6b6b6" />
				</s:fill>
			</s:Rect>
			
			<s:Label left="10" color="#FFFFFF" fontSize="16" text="填充模式" verticalCenter="0"/>
			
			
		</s:Group>
		
		<s:Group left="0" top="30" bottom="0" right="0">
			
			<s:layout>
				<s:HorizontalLayout gap="20" paddingLeft="25" verticalAlign="middle"/>
			</s:layout>
			
			<share:LiveShareButton id="btnMode1" click="onVideoModeHandler(event)" selected="{rendMode == fill_width}" icon="@Embed('assets/share/icon_mode_1.png')" />
			
			<share:LiveShareButton id="btnMode2" click="onVideoModeHandler(event)" selected="{rendMode == fill_height}" icon="@Embed('assets/share/icon_mode_2.png')"/>
			
			<share:LiveShareButton id="btnMode3" click="onVideoModeHandler(event)" selected="{rendMode == fill_screen}" icon="@Embed('assets/share/icon_mode_3.png')"/>
			
		</s:Group>
		
	</s:Group>
	
	
</common:ContentView>
